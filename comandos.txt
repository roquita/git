www.makigas.com

Ubicarse dentro del folder.
pwd -> ubicacion actual en directorios
ls -> mostrar los archivos dentro del directorio respectivo
cd abc/a/b/c-> moverse entre directorios
git init -> inicializar git
git diff index.html -> ver cambios antes de agregar al area de trabajo
git checkout -- index.html -> elimina la ultima modificacion realizada
git add index.html -> agregar index.html al area de trabajo
git reset HEAD index.html ->deshace el ultimo git add del archivo
git commit -> hacer un commit desde el area de trabajo
	editor en linea de comandos: "texto"-ESC-:wq-ENTER
git commit --amend ->reescribir el ultimo commit
git reset <#commit> -> regresar al estado del commit se�alado(los cambios quedan 	visibles en el working directory-rojito).
git reset --soft <#commit> ->regresa al estado del commit se�alado(los cambios quedan visibles en verdecito).
git reset --hard <#commit> ->regresa al estado del commit se�alado(todos los cambios son 	 	completamente eliminados)
git config --global user.email "luis@gmail.com"
git config --global user.name "luisroca"
git log -> ver historial de commits
git log --oneline ->ver cada commit en una linea
git log --oneline --decorate -> ver los commits y las ramas
git log --oneline --all --graph -> ver todas las ramas en diagrama de ramas.
git diff <#commit1> <#commit2> -> ver la diferencia entre dos commits
git diff HEAD~2 HEAD -> ver la diferencia entre los dos commits se�alados
git revert HEAD -> se agrega un commit adicional para revertir los cambios en el commit 		se�alado(no elimina ningun commit).
git revert --no-commit HEAD -> deshace el commit se�alado(verdecito)
git revert --continue ->confirmar revert
git revert --abort -> cancelar revert


//moverse entre ramas(branch)
git branch -> ver ramas disponibles y ubicacion actual
git branch rama_2 -> crea una rama llamada rama_2
git checkout rama_2 -> moverse a rama rama_2
git checkout -b rama_2 -> crear rama y ubicarse en ella
git branch -m rama_2 new_name -> cambiar nombre a rama_2
git branch -d rama_2 -> eliminar rama_2
git branch -D rama_2 -> eliminar rama_2 forzosamente
//remotes
git remote add origin https://github.com/roquita/git2 -> agregar un nuevo remoto
git remote -v  -> verificar remoto
git remote rename origin destination ->cambiar nombre a remoto
git remote rm destination -> eliminar remoto
git push origin master -> upload a origin desde master

//merge
git merge user_3 -> fusionar user_3 con master
git merge --abort -> deshacer una fusion cuando hay conflictos
